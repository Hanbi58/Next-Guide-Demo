{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\04_React_Guide\\\\23_2_NextMeetUp\\\\pages\\\\[meetupId]\\\\index.js\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { MongoClient, ObjectId } from \"mongodb\";\n\nfunction DetailsPage(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    id: props.meetupData._id.toString(),\n    title: props.meetupData.title,\n    image: props.meetupData.image,\n    address: props.meetupData.address,\n    description: props.meetupData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://hanbi58:hanbi@cluster0.vh7x03s.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetupCollection\");\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect(\"mongodb+srv://hanbi58:hanbi@cluster0.vh7x03s.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetupCollection\");\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId)\n  });\n  client.close();\n  return {\n    props: {\n      meetupData: selectedMeetup\n    }\n  };\n}\nexport default DetailsPage;","map":{"version":3,"sources":["D:/04_React_Guide/23_2_NextMeetUp/pages/[meetupId]/index.js"],"names":["MeetupDetail","MongoClient","ObjectId","DetailsPage","props","meetupData","_id","toString","title","image","address","description","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","toArray","close","fallback","paths","map","meetup","params","meetupId","getStaticProps","context","selectedMeetup","findOne"],"mappings":";;AAAA,OAAOA,YAAP,MAAyB,uCAAzB;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,sBACE,QAAC,YAAD;AACE,IAAA,EAAE,EAAEA,KAAK,CAACC,UAAN,CAAiBC,GAAjB,CAAqBC,QAArB,EADN;AAEE,IAAA,KAAK,EAAEH,KAAK,CAACC,UAAN,CAAiBG,KAF1B;AAGE,IAAA,KAAK,EAAEJ,KAAK,CAACC,UAAN,CAAiBI,KAH1B;AAIE,IAAA,OAAO,EAAEL,KAAK,CAACC,UAAN,CAAiBK,OAJ5B;AAKE,IAAA,WAAW,EAAEN,KAAK,CAACC,UAAN,CAAiBM;AALhC;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;AAED,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMZ,WAAW,CAACa,OAAZ,CACnB,8FADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,kBAAd,CAA1B;AACA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEb,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCc,OAAvC,EAAtB;AACAP,EAAAA,MAAM,CAACQ,KAAP;AACA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEL,OAAO,CAACM,GAAR,CAAaC,MAAD,KAAa;AAC9BC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,MAAM,CAACnB,GAAP,CAAWC,QAAX;AAAZ;AADsB,KAAb,CAAZ;AAFF,GAAP;AAMD;AAED,OAAO,eAAeqB,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C,QAAMF,QAAQ,GAAGE,OAAO,CAACH,MAAR,CAAeC,QAAhC;AAEA,QAAMd,MAAM,GAAG,MAAMZ,WAAW,CAACa,OAAZ,CACnB,8FADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,kBAAd,CAA1B;AACA,QAAMa,cAAc,GAAG,MAAMd,iBAAiB,CAACe,OAAlB,CAA0B;AACrDzB,IAAAA,GAAG,EAAEJ,QAAQ,CAACyB,QAAD;AADwC,GAA1B,CAA7B;AAGAd,EAAAA,MAAM,CAACQ,KAAP;AAEA,SAAO;AACLjB,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAEyB;AADP;AADF,GAAP;AAKD;AAED,eAAe3B,WAAf","sourcesContent":["import MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\nimport { MongoClient, ObjectId } from \"mongodb\";\r\n\r\nfunction DetailsPage(props) {\r\n  return (\r\n    <MeetupDetail\r\n      id={props.meetupData._id.toString()}\r\n      title={props.meetupData.title}\r\n      image={props.meetupData.image}\r\n      address={props.meetupData.address}\r\n      description={props.meetupData.description}\r\n    />\r\n  );\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://hanbi58:hanbi@cluster0.vh7x03s.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection(\"meetupCollection\");\r\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n  client.close();\r\n  return {\r\n    fallback: false,\r\n    paths: meetups.map((meetup) => ({\r\n      params: { meetupId: meetup._id.toString() },\r\n    })),\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  const meetupId = context.params.meetupId;\r\n\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://hanbi58:hanbi@cluster0.vh7x03s.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection(\"meetupCollection\");\r\n  const selectedMeetup = await meetupsCollection.findOne({\r\n    _id: ObjectId(meetupId),\r\n  });\r\n  client.close();\r\n\r\n  return {\r\n    props: {\r\n      meetupData: selectedMeetup,\r\n    },\r\n  };\r\n}\r\n\r\nexport default DetailsPage;\r\n"]},"metadata":{},"sourceType":"module"}