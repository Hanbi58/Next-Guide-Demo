{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\04_React_Guide\\\\23_2_NextMeetUp\\\\pages\\\\[meetupId]\\\\index.js\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport Head from \"next/head\";\n\nfunction DetailsPage(props) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      id: props._id,\n      title: props.title,\n      image: props.image,\n      address: props.address,\n      description: props.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://hanbi58:hanbi@cluster0.vh7x03s.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetupCollection\");\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect(\"mongodb+srv://hanbi58:hanbi@cluster0.vh7x03s.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetupCollection\");\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId)\n  });\n  client.close();\n  return {\n    props: {\n      id: selectedMeetup._id.toString(),\n      title: selectedMeetup.title,\n      image: selectedMeetup.image,\n      address: selectedMeetup.address,\n      description: selectedMeetup.description\n    }\n  };\n}\nexport default DetailsPage;","map":{"version":3,"sources":["D:/04_React_Guide/23_2_NextMeetUp/pages/[meetupId]/index.js"],"names":["MeetupDetail","MongoClient","ObjectId","Head","DetailsPage","props","title","_id","image","address","description","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","selectedMeetup","findOne","id"],"mappings":";;;AAAA,OAAOA,YAAP,MAAyB,uCAAzB;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,sBACE;AAAA,4BACE,QAAC,IAAD;AAAA,6BACE;AAAA,kBAAQA,KAAK,CAACC;AAAd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,YAAD;AACE,MAAA,EAAE,EAAED,KAAK,CAACE,GADZ;AAEE,MAAA,KAAK,EAAEF,KAAK,CAACC,KAFf;AAGE,MAAA,KAAK,EAAED,KAAK,CAACG,KAHf;AAIE,MAAA,OAAO,EAAEH,KAAK,CAACI,OAJjB;AAKE,MAAA,WAAW,EAAEJ,KAAK,CAACK;AALrB;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,kBADF;AAcD;;AAED,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMX,WAAW,CAACY,OAAZ,CACnB,8FADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,kBAAd,CAA1B;AACA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEX,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCY,OAAvC,EAAtB;AACAP,EAAAA,MAAM,CAACQ,KAAP;AACA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEL,OAAO,CAACM,GAAR,CAAaC,MAAD,KAAa;AAC9BC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,MAAM,CAACjB,GAAP,CAAWoB,QAAX;AAAZ;AADsB,KAAb,CAAZ;AAFF,GAAP;AAMD;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AAEA,QAAMd,MAAM,GAAG,MAAMX,WAAW,CAACY,OAAZ,CACnB,8FADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,kBAAd,CAA1B;AACA,QAAMc,cAAc,GAAG,MAAMf,iBAAiB,CAACgB,OAAlB,CAA0B;AACrDxB,IAAAA,GAAG,EAAEL,QAAQ,CAACwB,QAAD;AADwC,GAA1B,CAA7B;AAGAd,EAAAA,MAAM,CAACQ,KAAP;AAEA,SAAO;AACLf,IAAAA,KAAK,EAAE;AACL2B,MAAAA,EAAE,EAAEF,cAAc,CAACvB,GAAf,CAAmBoB,QAAnB,EADC;AAELrB,MAAAA,KAAK,EAAEwB,cAAc,CAACxB,KAFjB;AAGLE,MAAAA,KAAK,EAAEsB,cAAc,CAACtB,KAHjB;AAILC,MAAAA,OAAO,EAAEqB,cAAc,CAACrB,OAJnB;AAKLC,MAAAA,WAAW,EAAEoB,cAAc,CAACpB;AALvB;AADF,GAAP;AASD;AAED,eAAeN,WAAf","sourcesContent":["import MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\nimport { MongoClient, ObjectId } from \"mongodb\";\r\nimport Head from \"next/head\";\r\n\r\nfunction DetailsPage(props) {\r\n  return (\r\n    <>\r\n      <Head>\r\n        <title>{props.title}</title>\r\n      </Head>\r\n      <MeetupDetail\r\n        id={props._id}\r\n        title={props.title}\r\n        image={props.image}\r\n        address={props.address}\r\n        description={props.description}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://hanbi58:hanbi@cluster0.vh7x03s.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection(\"meetupCollection\");\r\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n  client.close();\r\n  return {\r\n    fallback: false,\r\n    paths: meetups.map((meetup) => ({\r\n      params: { meetupId: meetup._id.toString() },\r\n    })),\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  const meetupId = context.params.meetupId;\r\n\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://hanbi58:hanbi@cluster0.vh7x03s.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection(\"meetupCollection\");\r\n  const selectedMeetup = await meetupsCollection.findOne({\r\n    _id: ObjectId(meetupId),\r\n  });\r\n  client.close();\r\n\r\n  return {\r\n    props: {\r\n      id: selectedMeetup._id.toString(),\r\n      title: selectedMeetup.title,\r\n      image: selectedMeetup.image,\r\n      address: selectedMeetup.address,\r\n      description: selectedMeetup.description,\r\n    },\r\n  };\r\n}\r\n\r\nexport default DetailsPage;\r\n"]},"metadata":{},"sourceType":"module"}